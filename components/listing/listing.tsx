import {useState} from "react";import { ImArrowLeft2 } from "react-icons/im";import { ImArrowRight2 } from "react-icons/im";interface DataTablesList {    header: string[]    classTable?: string    rows: any}export default function ListingProject({classTable}: {classTable: DataTablesList} ){    const [page, setPage] = useState(1);    const itemsPerPage: number = 8;    const startIndex = (page - 1) * itemsPerPage;    const endIndex = page * itemsPerPage;    const [searchTerm, setSearchTerm] = useState('');    const handleChangePage = (newPage: number) => {        setPage(newPage);    };    const filteredRows = classTable.rows.filter((row: any) =>        Object.values<string>(row).some((value) =>            value.toLowerCase().includes(searchTerm.toLowerCase())        )    );    const totalPages = Math.ceil(filteredRows.length / itemsPerPage);    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {        setSearchTerm(e.target.value);        setPage(1);    };    return(        <>            <div className="mb-4">                <input                    type="text"                    placeholder="Pesquisar por cliente"                    value={searchTerm}                    onChange={handleSearch}                    className="border border-gray-300 rounded px-3 py-2"                />            </div>            <table className={`${classTable} table-auto w-full`}>                <thead className={'header-table-listing h-[50px] bg-customBlue text-white'}>                <tr className={'header-tables'}>                    {classTable.header.map((headerItem: string, index: number) => (                        <th key={index} className={'text-left p-4'}>                            {headerItem}                        </th>                    ))}                </tr>                </thead>                <tbody>                {filteredRows.slice(startIndex, endIndex).map((row: any, rowIndex: number) => (                    <tr                        className={`h-[40px] ${rowIndex % 2 === 0 ? 'bg-gray-100' : 'bg-white'}`}                        key={rowIndex}                    >                        {classTable.header.map((headerItem: string, colIndex: number) => (                            <td key={colIndex} className={'p-4'}>                                {row[headerItem.toLowerCase()]}                            </td>                        ))}                    </tr>                ))}                </tbody>            </table>            <div className="flex justify-between mt-4">                <div className="contet-infomations-page">                    <p className="text-center mt-2 text-gray-600">                        PÃ¡gina {page} de {totalPages} de {filteredRows.length} Documentos                    </p>                </div>                <div className="content-button flex justify-center mt-4">                    <button                        onClick={() => handleChangePage(page - 1)}                        disabled={page === 1}                        className="md:flex items-center bg-customBlue text-buttontext p-3 rounded-md"                        style={{marginRight: '8px'}}                    >                        <ImArrowLeft2/>                    </button>                    <button                        onClick={() => handleChangePage(page + 1)}                        disabled={page === totalPages}                        className="md:flex items-center bg-customBlue text-buttontext p-3 rounded-md"                    >                        <ImArrowRight2/>                    </button>                </div>            </div>        </>    )}